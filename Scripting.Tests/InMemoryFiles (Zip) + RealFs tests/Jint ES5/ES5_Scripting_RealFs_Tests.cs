using CSharpFunctionalExtensions;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Scripting.Js.v1;
using System;
using System.IO;

namespace Scripting.Tests
{
    [TestClass]
    public class ES5_Scripting_RealFs_Tests
    {
        [TestMethod]
        public void Jint_Scripting_RealFs_Test()
        {
            //Assert.Inconclusive(); return;

            Result<string> scriptsPath = FileIO.SearchAFolderAboveTheCurrentDirectoryOfTheApplication(Scripting_TestSettings.ScriptsPath_Tests); // find the folder with the scripts
            if (scriptsPath.IsFailure) throw new InvalidOperationException("scripts folder not found");

            ScriptingContext jsScriptingContext = ScriptingContext.ScriptingContextWithRealFs(Path.Combine(scriptsPath.Value, Scripting_TestSettings.ScriptsPath_Tests_ES5));

            JsScriptRunner jsScriptRunner = JsScriptRunner.RunnerWithContext(
                JsScriptRunnerType.Jint,
                jsScriptingContext,
                Scripting_TestSettings.ScriptingContextName);

            jsScriptRunner.Run("var exports = {};");  // required by the row of 'main.js' ```Object.defineProperty(exports, "__esModule", { value: true });``` generated by TypeScript
            jsScriptRunner.Run(jsScriptingContext.ReadFile("./lib/myrequire.js"));  // load a custom version of 'require'
            jsScriptRunner.Run(jsScriptingContext.ReadFile("main.js"));  // execute script from virtual FS (would have been the same executing "./main.js")
            Assert.AreEqual("Hello World", jsScriptingContext.ReadFile("filename"));  // test output of Js scripts
        }
    }
}
